<?xml version="1.0"?>
<!--
  ~ Copyright 2015 Vincent Brison.
  ~
  ~ Licensed under the Apache License, Version 2.0 (the "License");
  ~ you may not use this file except in compliance with the License.
  ~ You may obtain a copy of the License at
  ~
  ~    http://www.apache.org/licenses/LICENSE-2.0
  ~
  ~ Unless required by applicable law or agreed to in writing, software
  ~ distributed under the License is distributed on an "AS IS" BASIS,
  ~ WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
  ~ See the License for the specific language governing permissions and
  ~ limitations under the License.

<ruleset xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" name="Android Application Rules"
    xmlns="http://pmd.sf.net/ruleset/1.0.0"
    xsi:noNamespaceSchemaLocation="http://pmd.sf.net/ruleset_xml_schema.xsd"
    xsi:schemaLocation="http://pmd.sf.net/ruleset/1.0.0 http://pmd.sf.net/ruleset_xml_schema.xsd">
  -->
<ruleset name="Android Application Rules"
    xmlns="http://pmd.sourceforge.net/ruleset/2.0.0"
    xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
    xsi:schemaLocation="http://pmd.sourceforge.net/ruleset/2.0.0 https://pmd.sourceforge.io/ruleset_2_0_0.xsd">

    <description>Custom ruleset for Android application</description>

    <exclude-pattern>.*/R.java</exclude-pattern>
    <exclude-pattern>.*/gen/.*</exclude-pattern>

    <!--
    <rule ref="rulesets/java/android.xml" />
    -->
    <!-- Rules, that have been moved into a category -->
    <rule ref="category/java/errorprone.xml/CallSuperFirst" />
    <rule ref="category/java/errorprone.xml/CallSuperLast" />
    <rule ref="category/java/errorprone.xml/DoNotHardCodeSDCard" />

    <!--
    <rule ref="rulesets/java/clone.xml" />
    -->
    <!-- Rules, that have been moved into a category -->
    <rule ref="category/java/errorprone.xml/CloneMethodMustBePublic" />
    <rule ref="category/java/errorprone.xml/CloneMethodMustImplementCloneable" />
    <rule ref="category/java/errorprone.xml/CloneMethodReturnTypeMustMatchClassName" />
    <rule ref="category/java/errorprone.xml/CloneThrowsCloneNotSupportedException" />
    <rule ref="category/java/errorprone.xml/ProperCloneImplementation" />

    <!--
    <rule ref="rulesets/java/finalizers.xml" />
    -->
    <!-- Rules, that have been moved into a category -->
    <rule ref="category/java/errorprone.xml/AvoidCallingFinalize" />
    <rule ref="category/java/errorprone.xml/EmptyFinalizer" />
    <rule ref="category/java/errorprone.xml/FinalizeDoesNotCallSuperFinalize" />
    <rule ref="category/java/errorprone.xml/FinalizeOnlyCallsSuperFinalize" />
    <rule ref="category/java/errorprone.xml/FinalizeOverloaded" />
    <rule ref="category/java/errorprone.xml/FinalizeShouldBeProtected" />
    
    <!--
    <rule ref="rulesets/java/imports.xml">
        // Espresso is designed this way 
        <exclude name="TooManyStaticImports" />
    </rule>
    -->
    <!-- Rules, that have been moved into a category -->
    <rule ref="category/java/bestpractices.xml/UnusedImports" />
    <rule ref="category/java/errorprone.xml/ImportFromSamePackage" />
    <rule ref="category/java/codestyle.xml/DontImportJavaLang" />
    <rule ref="category/java/codestyle.xml/DuplicateImports" />
    <rule ref="category/java/codestyle.xml/UnnecessaryFullyQualifiedName" />

    <!--
    <rule ref="rulesets/java/logging-java.xml">
        // disabled because of lots of NullPointerExceptions
        <exclude name="InvalidSlf4jMessageFormat"/>
    </rule>
    -->
    <!-- Rules, that have been moved into a category -->
    <rule ref="category/java/errorprone.xml/LoggerIsNotStaticFinal" />
    <rule ref="category/java/errorprone.xml/MoreThanOneLogger" />
    <rule ref="category/java/bestpractices.xml/AvoidPrintStackTrace" />
    <!-- GuardLogStatementJavaUtil has been merged into GuardLogStatement -->
    <rule ref="category/java/bestpractices.xml/GuardLogStatement" name="GuardLogStatementJavaUtil" />
    <rule ref="category/java/bestpractices.xml/SystemPrintln" />

    <!--
    <rule ref="rulesets/java/braces.xml" />
    -->
    <!-- Rules, that have been moved into a category -->
    <rule ref="category/java/codestyle.xml/ForLoopsMustUseBraces" />
    <rule ref="category/java/codestyle.xml/IfElseStmtsMustUseBraces" />
    <rule ref="category/java/codestyle.xml/IfStmtsMustUseBraces" />
    <rule ref="category/java/codestyle.xml/WhileLoopsMustUseBraces" />


    <!--
    <rule ref="rulesets/java/strings.xml" />
    -->
    <!-- Rules, that have been moved into a category -->
    <rule ref="category/java/errorprone.xml/AvoidDuplicateLiterals" />
    <rule ref="category/java/errorprone.xml/StringBufferInstantiationWithChar" />
    <rule ref="category/java/errorprone.xml/UnnecessaryCaseChange" />
    <rule ref="category/java/errorprone.xml/UseEqualsToCompareStrings" />
    <rule ref="category/java/bestpractices.xml/AvoidStringBufferField" />
    <rule ref="category/java/performance.xml/AppendCharacterWithChar" />
    <rule ref="category/java/performance.xml/ConsecutiveAppendsShouldReuse" />
    <rule ref="category/java/performance.xml/ConsecutiveLiteralAppends" />
    <rule ref="category/java/performance.xml/InefficientEmptyStringCheck" />
    <rule ref="category/java/performance.xml/InefficientStringBuffering" />
    <rule ref="category/java/performance.xml/InsufficientStringBufferDeclaration" />
    <rule ref="category/java/performance.xml/StringInstantiation" />
    <rule ref="category/java/performance.xml/StringToString" />
    <rule ref="category/java/performance.xml/UseIndexOfChar" />
    <rule ref="category/java/performance.xml/UselessStringValueOf" />
    <rule ref="category/java/performance.xml/UseStringBufferLength" />


    <!--
    <rule ref="rulesets/java/basic.xml" />
    -->
    <!-- Rules, that have been moved into a category -->
    <rule ref="category/java/errorprone.xml/AvoidBranchingStatementAsLastInLoop" />
    <rule ref="category/java/errorprone.xml/AvoidDecimalLiteralsInBigDecimalConstructor" />
    <rule ref="category/java/errorprone.xml/AvoidMultipleUnaryOperators" />
    <rule ref="category/java/errorprone.xml/AvoidUsingOctalValues" />
    <rule ref="category/java/errorprone.xml/BrokenNullCheck" />
    <rule ref="category/java/errorprone.xml/CheckSkipResult" />
    <rule ref="category/java/errorprone.xml/ClassCastExceptionWithToArray" />
    <rule ref="category/java/errorprone.xml/DontUseFloatTypeForLoopIndices" />
    <rule ref="category/java/errorprone.xml/JumbledIncrementer" />
    <rule ref="category/java/errorprone.xml/MisplacedNullCheck" />
    <rule ref="category/java/errorprone.xml/OverrideBothEqualsAndHashcode" />
    <rule ref="category/java/errorprone.xml/ReturnFromFinallyBlock" />
    <rule ref="category/java/errorprone.xml/UnconditionalIfStatement" />
    <rule ref="category/java/multithreading.xml/AvoidThreadGroup" />
    <rule ref="category/java/multithreading.xml/DontCallThreadRun" />
    <rule ref="category/java/multithreading.xml/DoubleCheckedLocking" />
    <rule ref="category/java/bestpractices.xml/AvoidUsingHardCodedIP" />
    <rule ref="category/java/bestpractices.xml/CheckResultSet" />
    <rule ref="category/java/codestyle.xml/ExtendsObject" />
    <rule ref="category/java/codestyle.xml/ForLoopShouldBeWhileLoop" />
    <rule ref="category/java/performance.xml/BigIntegerInstantiation" />
    <rule ref="category/java/performance.xml/BooleanInstantiation" />
    <rule ref="category/java/design.xml/CollapsibleIfStatements" />
    <rule ref="category/java/design.xml/SimplifiedTernary" />

    <!--
    <rule ref="rulesets/java/naming.xml">
        <exclude name="AbstractNaming" />
        <exclude name="LongVariable" />
        <exclude name="ShortMethodName" />
        <exclude name="ShortVariable" />
        <exclude name="VariableNamingConventions" />
    </rule>
    -->
    <!-- Rules, that have been moved into a category -->
    <rule ref="category/java/errorprone.xml/AvoidFieldNameMatchingMethodName" />
    <rule ref="category/java/errorprone.xml/AvoidFieldNameMatchingTypeName" />
    <rule ref="category/java/errorprone.xml/MethodWithSameNameAsEnclosingClass" />
    <rule ref="category/java/errorprone.xml/SuspiciousEqualsMethodName" />
    <rule ref="category/java/errorprone.xml/SuspiciousHashcodeMethodName" />

    <rule ref="category/java/codestyle.xml/AvoidDollarSigns" />
    <rule ref="category/java/codestyle.xml/BooleanGetMethodName" />
    <rule ref="category/java/codestyle.xml/ClassNamingConventions" />
    <rule ref="category/java/codestyle.xml/GenericsNaming" />
    <rule ref="category/java/codestyle.xml/MethodNamingConventions" />
    <rule ref="category/java/codestyle.xml/MIsLeadingVariableName" /> <!-- also renamed -->
    <!-- providing also the new name, since RuleSetFactoryCompatibility will change existing rulesets to use the new rulename -->
    <rule ref="category/java/codestyle.xml/MIsLeadingVariableName" />
    <rule ref="category/java/codestyle.xml/NoPackage" />
    <rule ref="category/java/codestyle.xml/PackageCase" />
    <rule ref="category/java/codestyle.xml/ShortClassName" />
    <rule ref="category/java/codestyle.xml/SuspiciousConstantFieldName" />

</ruleset>